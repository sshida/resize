#!/bin/bash -eu

# Reference documents
# https://wiki.archlinux.org/title/working_with_the_serial_console
# ... rsz() works in OpenWrt 3.x, but it does not work in Ubuntu 22.04.1

# https://stackoverflow.com/questions/2575037/how-to-get-the-cursor-position-in-bash
# ... `stty raw -echo min 0` enabled to read escape sequence from text terminal

# https://www2.ccs.neu.edu/research/gpc/VonaUtils/vona/terminal/vtansi.htm
# ... Explanation for vt100 (DEC) escape sequences

# ESC 7 ... DECSC: DEC Save Cursor
# ESC [ r ... Enable scroll screen
# ESC [ x ; y H ... CUP: Cursor Position: locate cursor at (x, y)
# ESC [ 6n ... DSR: Device Status Report: Reports thee cursor position by transmitting "ESC [ width; height R"
# ESC 8 ... DECRC: DEC Restore Cursor

function resize() {
  [ -t 0 ] || { echo "resize: Error: Text terminal is not found" >&2; return 1; }

  local oldStty=$(stty -g)
  stty raw -echo min 0
  echo -en '\e7\e[r\e[9999;9999H\e[6n\e8'

  local IFS='[;' _escape y x
  read -sd R _escape y x
  stty $oldStty
  ### ここまでを別関数にしようとしたが
  ### 結果を標準出力からサブシェル経由で受け取るため
  ### readｈでvt100エスケープシーケンスの読み取りができなくなった。bashのglobal配列なら

  [ -n "$x" ] && [ -n "$y" ] || {
    echo "resize: Error: Cannot get rows or columns by vt100 escape sequence" >&2
    return 2
  }
  echo -n "$TERM $COLUMNS x $LINES"
  if [ ${COLUMNS} -ne ${x} ] || [ ${LINES} -ne ${y} ]; then
    echo -n " -> ${x} x ${y}"
    stty cols ${x} rows ${y}
  fi
  echo
}

resize

